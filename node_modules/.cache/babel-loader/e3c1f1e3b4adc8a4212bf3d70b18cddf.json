{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/Frontend Task/React JS/todo/src/Components/main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  _s();\n\n  let {\n    tasks,\n    onDelete,\n    onEdit,\n    onAdd,\n    onToggle\n  } = _ref;\n  const [task, setTask] = useState('');\n  const [check, setCheck] = useState(false);\n  const [id, setID] = useState('');\n  const x = document.getElementsByClassName.innerText;\n\n  const submit = () => {\n    if (!task) {\n      alert(\"Task input field can't be empty\");\n    }\n\n    x === 'Update' ? onEdit(id, task) : onAdd(task, check);\n    setTask('');\n  };\n\n  const onEd = (id, text) => {\n    setTask(text);\n    document.getElementById('new-task').value = text;\n    document.getElementsByClassName('btn').val = \"Update\";\n    setID(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-task\",\n          type: \"text\",\n          value: task,\n          onChange: e => {\n            setTask(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: submit,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 112\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"incomplete-tasks\",\n        children: tasks.map(val => {\n          return val.check ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"checkbox\",\n                checked: val.check,\n                onClick: e => {\n                  onToggle(val.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: val.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 169\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 194\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => {\n                  onEd(val.id, val.task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 215\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => {\n                  onDelete(val.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 93\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 52\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"completed-tasks\",\n        children: tasks.map(val => {\n          return val.check ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"checkbox\",\n                checked: val.check,\n                onClick: e => {\n                  onToggle(val.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: val.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 162\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 187\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => {\n                  onEd(val.id, val.task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 208\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => {\n                  onDelete(val.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 93\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 45\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Main, \"mxJRDi+jRlXaE9kofCfkqKupZDE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Main","tasks","onDelete","onEdit","onAdd","onToggle","task","setTask","check","setCheck","id","setID","x","document","getElementsByClassName","innerText","submit","alert","onEd","text","getElementById","value","val","e","target","map"],"sources":["/home/cedcoss/Desktop/Frontend Task/React JS/todo/src/Components/main.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\n\nconst Main = ({tasks,onDelete,onEdit,onAdd,onToggle}) => {\n    const [task, setTask ] = useState('');\n    const [check, setCheck] = useState(false);\n    const [id,setID] = useState('');\n    const x = document.getElementsByClassName.innerText;\n   \n    const submit = () =>{\n        if(!task){\n            alert(\"Task input field can't be empty\");\n        }\n        x === 'Update' ? onEdit(id,task) : onAdd(task,check);\n        setTask('');\n    }\n    const onEd = (id,text)=>{\n        setTask(text);\n        document.getElementById('new-task').value = text;\n        document.getElementsByClassName('btn').val = \"Update\";\n        setID(id);\n    }\n    return (\n        <>\n            <div className=\"container\">\n\n                <h2>TODO LIST</h2>\n                <h3>Add Item</h3>\n                <p>\n                    <input id=\"new-task\" type=\"text\" value={task}  onChange={(e)=>{setTask(e.target.value)}} /><button className=\"btn\" onClick={submit}>Add</button>\n                </p>\n\n                <h3>Todo</h3>\n                <ul id=\"incomplete-tasks\" >\n                    {tasks.map((val)=>{\n                        return val.check ?<></>: <><li key={val.id}><input type=\"checkbox\" className=\"checkbox\" checked={val.check} onClick={(e)=>{onToggle(val.id)}} /><label>{val.task}</label><input type=\"text\" /><button\n                        className=\"edit\" onClick={()=>{onEd(val.id,val.task)}}>Edit</button><button className=\"delete\" onClick={()=>{onDelete(val.id)}}>Delete</button></li></>\n                    })}\n                </ul>\n\n                <h3>Completed</h3>\n                <ul id=\"completed-tasks\">\n                {tasks.map((val)=>{\n                        return val.check ?<><li key={val.id}><input type=\"checkbox\" className=\"checkbox\" checked={val.check} onClick={(e)=>{onToggle(val.id)}} /><label>{val.task}</label><input type=\"text\" /><button\n                        className=\"edit\" onClick={()=>{onEd(val.id,val.task)}}>Edit</button><button className=\"delete\" onClick={()=>{onDelete(val.id)}}>Delete</button></li></>:<></>\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}