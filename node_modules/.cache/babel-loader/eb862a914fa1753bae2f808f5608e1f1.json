{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/Frontend Task/React JS/todo/src/Components/main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = _ref => {\n  _s();\n\n  let {\n    tasks,\n    onDelete,\n    onEdit,\n    onAdd\n  } = _ref;\n  const [task, setTask] = useState('');\n  const [check, setCheck] = useState;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-task\",\n          type: \"text\",\n          value: task,\n          onChange: e => {\n            setTask(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 111\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"incomplete-tasks\",\n        children: tasks.map(val => {\n          return val.check ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"checkbox\",\n                checked: val.check\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: val.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 135\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 160\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => {\n                  onEdit(val.id, val.task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 181\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => {\n                  onDelete(val.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 95\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 52\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"completed-tasks\",\n        children: tasks.map(val => {\n          return val.check ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"checkbox\",\n                checked: val.check\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: val.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 129\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 154\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => {\n                  onEdit(val.id, val.task);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 175\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => {\n                  onDelete(val.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 95\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 45\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Main, \"UPJYth6TotSS/vs/jYHpivg1j/g=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Main","tasks","onDelete","onEdit","onAdd","task","setTask","check","setCheck","e","target","value","map","val","id"],"sources":["/home/cedcoss/Desktop/Frontend Task/React JS/todo/src/Components/main.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\n\nconst Main = ({tasks,onDelete,onEdit,onAdd}) => {\n    const [task, setTask ] = useState('');\n    const [check, setCheck] = useState\n   \n    return (\n        <>\n            <div className=\"container\">\n\n                <h2>TODO LIST</h2>\n                <h3>Add Item</h3>\n                <p>\n                    <input id=\"new-task\" type=\"text\" value={task} onChange={(e)=>{setTask(e.target.value)}} /><button className=\"btn\">Add</button>\n                </p>\n\n                <h3>Todo</h3>\n                <ul id=\"incomplete-tasks\" >\n                    {tasks.map((val)=>{\n                        return val.check ?<></>: <><li key={val.id}><input type=\"checkbox\" className=\"checkbox\" checked={val.check} /><label>{val.task}</label><input type=\"text\" /><button\n                        className=\"edit\" onClick={()=>{onEdit(val.id,val.task)}}>Edit</button><button className=\"delete\" onClick={()=>{onDelete(val.id)}}>Delete</button></li></>\n                    })}\n                </ul>\n\n                <h3>Completed</h3>\n                <ul id=\"completed-tasks\">\n                {tasks.map((val)=>{\n                        return val.check ?<><li key={val.id}><input type=\"checkbox\" className=\"checkbox\" checked={val.check}  /><label>{val.task}</label><input type=\"text\" /><button\n                        className=\"edit\" onClick={()=>{onEdit(val.id,val.task)}}>Edit</button><button className=\"delete\" onClick={()=>{onDelete(val.id)}}>Delete</button></li></>:<></>\n                    })}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}